1. Implement first:
    - Static type-system
    - Compile to binary code
    - std::io
    - std::format
    - std::time
    - Cycle for
    - else if
    - operator as
    - Consts
    - Ability to use heap
    - std::mem
    - std::weak_ptr
    - Arrays
    - Tuples
    - Iterators
    - Ranges
    - Slices
    - References
    - Ability to make your own structs
2. Second:
    - std::file
    - std::net
    - std::rand
    - std::log
    - std::environment
    - std::smart_ptr
    - std::collections
    - Vector, LinkedList, HashMap, HashSet, BTreeMap
    - Enums
    - Generics
    - match
    - Result<T, E> and Option<T>
    - Closures
    - Methods
    - Statics
    - Destructuring arrays/tuples
    - Operator ?
    - Operator overloading
    - Spread Operator(...)
    - Named function arguments
    - Traits/Interfaces
3. Last:
    - std::process
    - std::thread
    - std::sync
    - std::ffi
    - The ability to delay code execution until the end of the function(aka defer in Go)
    - The module system
    - Creating your own operators
    - Macros
    - Code formatter
    - Code analyzer
    - LSP 
    - Generators(yield)
    - Simple documentation
    - Debugger
    - Package Manager
    - IDE
